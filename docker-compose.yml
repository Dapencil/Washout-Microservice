version: "3.9"
services:
  washdb-service:
    container_name: washing_db
    image: "mongo:3.6"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db_washing:/data/db
  branchdb-service:
    container_name: branch_db
    image: "mongo:3.6"
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db_branch:/data/db
  authdb-service:
    container_name: auth_db
    image: mariadb:10
    ports:
      - "3306:3306"
    environment:
      TZ: Asia/Bangkok
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: "%"
    volumes:
      - ./db_auth:/var/lib/mysql
  rabbit-mq:
    container_name: rabbit_broker
    image: rabbitmq:3-management
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

  order-service:
    container_name: order_container
    depends_on:
      - washdb-service
    build: ./Order
    environment:
      - NODE_ENV=PROD
      - PROD_IP=order-service
    links:
      - washdb-service
  noti-service:
    container_name: noti_container
    build: ./Notification
    restart: on-failure
    depends_on:
      - rabbit-mq
    environment:
      - BROKER_URL=amqp://rabbit-mq
      - AUTH_URL=http://auth-service:3001/deviceToken
    links:
      - rabbit-mq
  machine-service:
    container_name: machine_container
    build: ./Machine
    restart: on-failure
    depends_on:
      - washdb-service
      - rabbit-mq
    links:
      - washdb-service
      - rabbit-mq
    environment:
      - NODE_ENV=PROD
      - BROKER_URL=amqp://rabbit-mq
      - ORDER_IP=order-service
    ports:
      - "30044:30044"
  branch-service:
    container_name: branch_container
    build: ./Branch
    depends_on:
      - branchdb-service
    links:
      - branchdb-service
    environment:
      - NODE_ENV=PROD
      - MACHINE_IP=machine-service
  auth-service:
    container_name: auth_container
    build: ./Auth
    depends_on:
      - authdb-service
    links:
      - authdb-service
    restart: on-failure
  webserver:
    container_name: webserver_container
    build: ./WebServer
    links:
      - auth-service
      - machine-service
      - branch-service
    external_links:
      - frontend
    environment:
      - MACHINE_IP=machine-service
      - BRANCH_IP=branch-service
      - AUTH_URL=http://auth-service:3003/
    networks:
      - washout
    ports:
      - "3001:3001"
  apigateway:
    container_name: apigateway_container
    build: ./APIGateway
    links:
      - auth-service
      - machine-service
      - branch-service
    environment:
      - ORDER_IP=order-services
      - MACHINE_IP=machine-service
      - BRANCH_IP=branch-service
      - AUTH_URL=http://auth-service:3003/
    ports:
      - "3004:3004"

networks:
  washout:
    name: washout-network
